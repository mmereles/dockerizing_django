###########
# BUILDER #
###########

#pull oficcial base image
FROM python:3.11.4-slim-buster

# set work directory
WORKDIR /usr/src/app/

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt-get update && \
     apt-get install -y --no-install-recommends gcc


# install dependencies
RUN pip install --upgrade pip
RUN pip install flake==6.0.0
COPY . /usr/src/app/
RUN flake8 --ignore=E501,F401

# Install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

# pull oficcial base image
FROM python:3.11.4-slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the appropiate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME
WORKDIR ${APP_HOME}/hello_django

# chown all the files to the app user
RUN chown -R app:app ${APP_HOME}

# change to the app user
USER app

# run entrypoint.sh
CMD ["/bin/bash", "-c", "/usr/src/app/entrypoint.prods.sh"]